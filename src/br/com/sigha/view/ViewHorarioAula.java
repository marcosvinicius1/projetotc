/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.sigha.view;

import br.com.sigha.beans.CursoBeans;
import br.com.sigha.beans.HorarioAulaBeans;
import br.com.sigha.beans.HorarioAulaPesquisaBeans;
import br.com.sigha.beans.HorarioAulaProfMatBeans;
import br.com.sigha.beans.UnidadeLogadoBeans;
import br.com.sigha.dao.AuxHorarioCursoDao;
import br.com.sigha.dao.CursoDao;
import br.com.sigha.dao.HorarioAulaDao;
import br.com.sigha.dao.HorarioAulaProfMatDao;
import br.com.sigha.logica.LAuxGradeHorario;
import br.com.sigha.logica.LProfessorHorario;
import br.com.sigha.logica.ThreadGeraHorario;
import br.com.sigha.logica.ThreadRelatorioHorario;
import br.com.sigha.util.DataSistema;
import br.com.sigha.util.LogsTxt;
import br.com.sigha.util.QtdeOcorrenciaCaracter;
import br.com.sigha.conexao.ConexaoBanco;
import java.io.File;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author MarcosVinicius
 */
public class ViewHorarioAula extends javax.swing.JPanel {

    /**
     * Creates new form ViewHorarioAula
     */
    List<CursoBeans> lcurso;
    DefaultTableModel tabelacurso;
    List<HorarioAulaProfMatBeans> hapmb;

    public ViewHorarioAula() {
        initComponents();
        InicializaTabela();

        jYanohorario.setValue(Integer.valueOf(new DataSistema().getAno()));
        BuscaCursos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        Aguarde = new javax.swing.JDialog();
        jXBusyLabel1 = new org.jdesktop.swingx.JXBusyLabel();
        PesquisaHorario = new javax.swing.JDialog();
        jScrollPane2 = new javax.swing.JScrollPane();
        jdtbhorario = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jdTFpesquisahorario = new javax.swing.JTextField();
        jdCBcampo = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jYanohorario = new com.toedter.calendar.JYearChooser();
        jPanel3 = new javax.swing.JPanel();
        jBgerarhorario = new javax.swing.JButton();
        jBbuscarhorario = new javax.swing.JButton();
        jBexcluirhorario = new javax.swing.JButton();
        jBcancelar = new javax.swing.JButton();
        jBnovo = new javax.swing.JButton();
        jBemprimir = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTanohorario = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jThorario = new javax.swing.JTable();
        jCcursos = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jBadiciona = new javax.swing.JButton();
        jBretira = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTcurso = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();

        Aguarde.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        Aguarde.setTitle("Aguarde");
        Aguarde.setMinimumSize(new java.awt.Dimension(197, 78));
        Aguarde.setModal(true);
        Aguarde.setResizable(false);

        jXBusyLabel1.setBusy(true);
        jXBusyLabel1.setText("Aguarde Gerando Horario");
        jXBusyLabel1.setMaximumSize(new java.awt.Dimension(177, 43));
        jXBusyLabel1.setMinimumSize(new java.awt.Dimension(177, 43));

        javax.swing.GroupLayout AguardeLayout = new javax.swing.GroupLayout(Aguarde.getContentPane());
        Aguarde.getContentPane().setLayout(AguardeLayout);
        AguardeLayout.setHorizontalGroup(
            AguardeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AguardeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jXBusyLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        AguardeLayout.setVerticalGroup(
            AguardeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AguardeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jXBusyLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PesquisaHorario.setTitle("Pesquisa Horario");
        PesquisaHorario.setMinimumSize(new java.awt.Dimension(693, 356));
        PesquisaHorario.setModal(true);
        PesquisaHorario.setResizable(false);
        PesquisaHorario.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                PesquisaHorarioComponentShown(evt);
            }
        });

        jdtbhorario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CURSO", "ANO LETIVO", "DATA HORARIO", "UNIDADE", "DATA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jdtbhorario.getTableHeader().setResizingAllowed(false);
        jdtbhorario.getTableHeader().setReorderingAllowed(false);
        jdtbhorario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jdtbhorarioMouseClicked(evt);
            }
        });
        jdtbhorario.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jdtbhorarioComponentShown(evt);
            }
        });
        jScrollPane2.setViewportView(jdtbhorario);
        if (jdtbhorario.getColumnModel().getColumnCount() > 0) {
            jdtbhorario.getColumnModel().getColumn(0).setResizable(false);
            jdtbhorario.getColumnModel().getColumn(1).setResizable(false);
            jdtbhorario.getColumnModel().getColumn(2).setResizable(false);
            jdtbhorario.getColumnModel().getColumn(3).setResizable(false);
            jdtbhorario.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel4.setText("Pesquisa:");

        jdTFpesquisahorario.setDocument(new br.com.sigha.util.LimitaCaracterUpper(80));
        jdTFpesquisahorario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jdTFpesquisahorarioKeyReleased(evt);
            }
        });

        jdCBcampo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CURSO", "ANOLETIVO", "DATAGERACAO", "UNIDADE" }));

        javax.swing.GroupLayout PesquisaHorarioLayout = new javax.swing.GroupLayout(PesquisaHorario.getContentPane());
        PesquisaHorario.getContentPane().setLayout(PesquisaHorarioLayout);
        PesquisaHorarioLayout.setHorizontalGroup(
            PesquisaHorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PesquisaHorarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PesquisaHorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 673, Short.MAX_VALUE)
                    .addGroup(PesquisaHorarioLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(PesquisaHorarioLayout.createSequentialGroup()
                        .addComponent(jdTFpesquisahorario)
                        .addGap(18, 18, 18)
                        .addComponent(jdCBcampo, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        PesquisaHorarioLayout.setVerticalGroup(
            PesquisaHorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PesquisaHorarioLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PesquisaHorarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jdTFpesquisahorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jdCBcampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("Ano Do Horario");

        jYanohorario.setValue(2013);

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jBgerarhorario.setText("GERAR HORARIO");
        jBgerarhorario.setEnabled(false);
        jBgerarhorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBgerarhorarioActionPerformed(evt);
            }
        });

        jBbuscarhorario.setText("PESQUISAR");
        jBbuscarhorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBbuscarhorarioActionPerformed(evt);
            }
        });

        jBexcluirhorario.setText("EXCLUIR");
        jBexcluirhorario.setEnabled(false);
        jBexcluirhorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBexcluirhorarioActionPerformed(evt);
            }
        });

        jBcancelar.setText("CANCELAR");
        jBcancelar.setEnabled(false);
        jBcancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBcancelarActionPerformed(evt);
            }
        });

        jBnovo.setText("NOVO");
        jBnovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBnovoActionPerformed(evt);
            }
        });

        jBemprimir.setText("IMPRIMIR");
        jBemprimir.setEnabled(false);
        jBemprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBemprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addComponent(jBnovo)
                .addGap(18, 18, 18)
                .addComponent(jBcancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBgerarhorario)
                .addGap(18, 18, 18)
                .addComponent(jBbuscarhorario)
                .addGap(18, 18, 18)
                .addComponent(jBexcluirhorario)
                .addGap(18, 18, 18)
                .addComponent(jBemprimir)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBbuscarhorario, jBcancelar, jBemprimir, jBexcluirhorario, jBgerarhorario, jBnovo});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBbuscarhorario, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBexcluirhorario)
                        .addComponent(jBemprimir))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBgerarhorario, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBcancelar)
                        .addComponent(jBnovo)))
                .addGap(20, 20, 20))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBbuscarhorario, jBcancelar, jBemprimir, jBexcluirhorario, jBgerarhorario, jBnovo});

        jLabel3.setText("/");

        jTanohorario.setEditable(false);
        jTanohorario.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));
        jTanohorario.setText("1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jYanohorario, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(jLabel3)
                                .addGap(10, 10, 10)
                                .addComponent(jTanohorario, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jYanohorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jTanohorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(76, 76, 76)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jThorario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CURSO", "PERIODO", "INICIO", "TERMINO", "SEGUNDA", "TERCA", "QUARTA", "QUINTA", "SEXTA", "SABADO", "DOMINGO", "ANO LETIVO", "DATA GERAÇÃO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true, true, true, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jThorario.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jThorario.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jThorario);
        if (jThorario.getColumnModel().getColumnCount() > 0) {
            jThorario.getColumnModel().getColumn(1).setResizable(false);
            jThorario.getColumnModel().getColumn(2).setResizable(false);
            jThorario.getColumnModel().getColumn(3).setResizable(false);
            jThorario.getColumnModel().getColumn(12).setResizable(false);
        }

        jLabel2.setText("Cursos");

        jBadiciona.setText("+");
        jBadiciona.setEnabled(false);
        jBadiciona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBadicionaActionPerformed(evt);
            }
        });

        jBretira.setText("-");
        jBretira.setEnabled(false);
        jBretira.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBretiraActionPerformed(evt);
            }
        });

        jTcurso.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "REGISTRO", "CURSOS"
            }
        ));
        jTcurso.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTcurso);
        if (jTcurso.getColumnModel().getColumnCount() > 0) {
            jTcurso.getColumnModel().getColumn(0).setResizable(false);
            jTcurso.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel5.setForeground(new java.awt.Color(204, 0, 0));
        jLabel5.setText("Cursos Selecionados");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jBadiciona)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jBretira)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5))
                            .addComponent(jCcursos, 0, 267, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCcursos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBadiciona)
                            .addComponent(jBretira)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jBgerarhorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBgerarhorarioActionPerformed
        try {
            if (jTcurso.getRowCount() > 0 && Integer.valueOf(jTanohorario.getText()) > 0) {
                aguarde("Aguarde Gerando Horario");
                new LogsTxt().criaPasta(new DataSistema().getDia()+"."+new DataSistema().getMes()+"."+new DataSistema().getAno());
                ThreadGeraHorario t = new ThreadGeraHorario(this, jYanohorario.getValue() + "/" + jTanohorario.getText(), new Date());
                new Thread(t).start();

            } else {
                JOptionPane.showMessageDialog(null, "Preencher Todos os Campos Obrigatorio\n", "Gerar Horario", JOptionPane.WARNING_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Campo Ano do Horario com Dados Incorreto\n" + e, "Gerar Horario", JOptionPane.WARNING_MESSAGE);
        }

        // TODO add your handling code here:
        //  GeraHorario();       
        //   BuscaHorarioAula();
//        JOptionPane.showMessageDialog(null, "Pronto");
        //JOptionPane.showMessageDialog(null, new Random().nextBoolean());
//        List<Integer> f=new ArrayList<Integer>();
//        f.add(1);
//        f.add(2);
//        f.add(3);
//        f.add(4);
//        f.add(5);
//        JOptionPane.showMessageDialog(null, new LAuxGradeHorario().EscolheIdProfessor(f));
    }//GEN-LAST:event_jBgerarhorarioActionPerformed

    private void jBadicionaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBadicionaActionPerformed
        // TODO add your handling code here:
        AdicionaMateria();
    }//GEN-LAST:event_jBadicionaActionPerformed

    private void jBretiraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBretiraActionPerformed
        // TODO add your handling code here:
        RemoveMateria();
    }//GEN-LAST:event_jBretiraActionPerformed

    private void jBbuscarhorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBbuscarhorarioActionPerformed
        // TODO add your handling code here:
//        List<String> l = new ArrayList<>();
//        l = new QtdeOcorrenciaCaracter().ListPalavra('|', jTanohorario.getText());
//        for (int i = 0; i < l.size(); i++) {
//            JOptionPane.showMessageDialog(null, l.get(i));
//
//        }
        PesquisaHorario.setLocationRelativeTo(null);
        PesquisaHorario.setVisible(true);
    }//GEN-LAST:event_jBbuscarhorarioActionPerformed

    private void jdtbhorarioComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jdtbhorarioComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_jdtbhorarioComponentShown

    private void PesquisaHorarioComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_PesquisaHorarioComponentShown
        // TODO add your handling code here:
        TableColumn colunadata = jdtbhorario.getColumnModel().getColumn(4);
        colunadata.setMinWidth(0);
        colunadata.setMaxWidth(0);
        jdPesquisaHorario(jdTFpesquisahorario.getText(), String.valueOf(jdCBcampo.getSelectedItem()));
    }//GEN-LAST:event_PesquisaHorarioComponentShown

    private void jdTFpesquisahorarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jdTFpesquisahorarioKeyReleased
        // TODO add your handling code here:
        jdPesquisaHorario(jdTFpesquisahorario.getText(), String.valueOf(jdCBcampo.getSelectedItem()));
    }//GEN-LAST:event_jdTFpesquisahorarioKeyReleased

    private void jdtbhorarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jdtbhorarioMouseClicked
        // TODO add your handling code here

        for (int i = 0; i < jdtbhorario.getRowCount(); i++) {
            if (jdtbhorario.getSelectedRow() == i) {
                limpaTela();
                BuscaHorarioAula(String.valueOf(jdtbhorario.getValueAt(i, 1)), (Date) jdtbhorario.getValueAt(i, 4));
                ativaNovoPesquisaExcluirEmprimir();
                PesquisaHorario.setVisible(false);
            }
        }

    }//GEN-LAST:event_jdtbhorarioMouseClicked

    private void jBnovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBnovoActionPerformed
        // TODO add your handling code here:
        ativaGerarHorarioCancelar();
        inicializaTela();
        buscaAnoletivo();
    }//GEN-LAST:event_jBnovoActionPerformed

    private void jBcancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBcancelarActionPerformed
        // TODO add your handling code here:
        ativaNovoPesquisa();
        limpaTela();
    }//GEN-LAST:event_jBcancelarActionPerformed

    private void jBexcluirhorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBexcluirhorarioActionPerformed
        try {
            // TODO add your handling code here:
            if (new HorarioAulaDao().DeletaHorario(jThorario.getValueAt(1, 11).toString(), jThorario.getValueAt(1, 12).toString())) {
                limpaTela();
                ativaNovoPesquisa();
                JOptionPane.showMessageDialog(null, "Registro Excluido com Sucesso\n", "Gerar Horario", JOptionPane.WARNING_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Não Foi Possivel Excluir Registro\n", "Gerar Horario", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao Excluir Registro\n" + ex, "Gerar Horario", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jBexcluirhorarioActionPerformed

    private void jBemprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBemprimirActionPerformed
        // TODO add your handling code here:
        aguarde("Aguarde");
        imprimeHorario();
    }//GEN-LAST:event_jBemprimirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JDialog Aguarde;
    private javax.swing.JDialog PesquisaHorario;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jBadiciona;
    private javax.swing.JButton jBbuscarhorario;
    private javax.swing.JButton jBcancelar;
    private javax.swing.JButton jBemprimir;
    private javax.swing.JButton jBexcluirhorario;
    private javax.swing.JButton jBgerarhorario;
    private javax.swing.JButton jBnovo;
    private javax.swing.JButton jBretira;
    private javax.swing.JComboBox jCcursos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JFormattedTextField jTanohorario;
    private javax.swing.JTable jTcurso;
    private javax.swing.JTable jThorario;
    private org.jdesktop.swingx.JXBusyLabel jXBusyLabel1;
    private com.toedter.calendar.JYearChooser jYanohorario;
    private javax.swing.JComboBox jdCBcampo;
    private javax.swing.JTextField jdTFpesquisahorario;
    private javax.swing.JTable jdtbhorario;
    // End of variables declaration//GEN-END:variables

    private void limpaTela() {
        tabelacurso.setNumRows(0);
        DefaultTableModel tabelahorario = (DefaultTableModel) jThorario.getModel();
        tabelahorario.setNumRows(0);
        jTanohorario.setText("1");
        jYanohorario.setValue(Integer.valueOf(new DataSistema().getAno()));

    }
     private void inicializaTela() {
        tabelacurso.setNumRows(0);
        DefaultTableModel tabelahorario = (DefaultTableModel) jThorario.getModel();
        tabelahorario.setNumRows(0);        
    }
    
    private void ativaGerarHorarioCancelar() {
        jBnovo.setEnabled(false);
        jBcancelar.setEnabled(true);
        jBgerarhorario.setEnabled(true);
        jBbuscarhorario.setEnabled(false);
        jBexcluirhorario.setEnabled(false);
        jBadiciona.setEnabled(true);
        jBretira.setEnabled(true);
        jBemprimir.setEnabled(false);
        jYanohorario.setEnabled(false);
    }

    private void ativaNovoPesquisa() {
        jBnovo.setEnabled(true);
        jBcancelar.setEnabled(false);
        jBgerarhorario.setEnabled(false);
        jBbuscarhorario.setEnabled(true);
        jBexcluirhorario.setEnabled(false);
        jBadiciona.setEnabled(false);
        jBretira.setEnabled(false);
        jBemprimir.setEnabled(false);
        jYanohorario.setEnabled(true);
    }

    public void ativaNovoPesquisaExcluirEmprimir() {
        jBnovo.setEnabled(true);
        jBcancelar.setEnabled(false);
        jBgerarhorario.setEnabled(false);
        jBbuscarhorario.setEnabled(true);
        jBexcluirhorario.setEnabled(true);
        jBadiciona.setEnabled(false);
        jBretira.setEnabled(false);
        jBemprimir.setEnabled(true);
        jYanohorario.setEnabled(true);
    }
//metodo gera horario
     public void GeraHorario(int geracao) {  
         //sera utilizado para gerar mais de um horario de aula do mesmo curso
        jTanohorario.setText(String.valueOf(Integer.valueOf(jTanohorario.getText())+geracao));       
        //LAuxGradeHorario lf = new LAuxGradeHorario(jYanohorario.getValue() + "/" + jTanohorario.getText());
        try {
            for (int i = 0; i < jTcurso.getRowCount(); i++) {
                //preenche tabela horarioauxiliar e horario de aula
                 new LAuxGradeHorario(jYanohorario.getValue() + "/" + jTanohorario.getText()).GradeHorario(Integer.valueOf(String.valueOf(jTcurso.getValueAt(i, 0))));
                 //sincroniza professores no horario, de acordo com suas preferencias e configuraçao na tabela horario
                SincronizaProfessor(Integer.valueOf(String.valueOf(jTcurso.getValueAt(i, 0))));
                if(verificaHorario(jYanohorario.getValue() + "/" + jTanohorario.getText(),Integer.valueOf(jTcurso.getValueAt(i, 0).toString()),new Date())){                                                        
                    //cadastra horario de aula
                    new LProfessorHorario(Integer.valueOf(String.valueOf(jTcurso.getValueAt(i, 0)))).CadastraHorarioAula(jYanohorario.getValue() + "/" + jTanohorario.getText(),new Date());
                    //sincroniza professor com horario de aula
                    SincronizaProfessor(Integer.valueOf(String.valueOf(jTcurso.getValueAt(i, 0))));
                }               
            }
            new AuxHorarioCursoDao().DeletaHorarioAux();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao Cadastrar Cursos Na Tabela AuxiliarCursos\n" + ex, "Gerar Horario", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void BuscaCursos() {
        new LogsTxt().criaPasta(new DataSistema().getDia()+"."+new DataSistema().getMes()+"."+new DataSistema().getAno());
        try {
            CursoDao cd = new CursoDao();
            lcurso = cd.BuscaCursoAtivo(new UnidadeLogadoBeans().getId());
            for (int i = 0; i < lcurso.size(); i++) {
                jCcursos.addItem(lcurso.get(i).getNome());
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao Buscar Cursos\n" + ex, "Gera Horario", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void InicializaTabela() {
        tabelacurso = (DefaultTableModel) jTcurso.getModel();
        jTcurso.getColumnModel().getColumn(0).setMinWidth(60);
        jTcurso.getColumnModel().getColumn(0).setMaxWidth(90);
        jTcurso.getColumnModel().getColumn(1).setMinWidth(200);
        jTcurso.getColumnModel().getColumn(1).setMaxWidth(200);
    }

    private void AdicionaMateria() {
        Boolean ver = true;
        for (int i = 0; i < jTcurso.getRowCount(); i++) {
            if (String.valueOf(jTcurso.getValueAt(i, 1)).equals(String.valueOf(jCcursos.getSelectedItem()))) {
                ver = false;
            }
        }
        if (ver) {

            tabelacurso.addRow(new Object[]{lcurso.get(jCcursos.getSelectedIndex()).getId(), lcurso.get(jCcursos.getSelectedIndex()).getNome()});
        } else {
            JOptionPane.showMessageDialog(null, "Materia Já Adicionada\n", "Gera Horario", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void RemoveMateria() {
        if (jTcurso.getSelectedRow() >= 0) {
            tabelacurso.removeRow(jTcurso.getSelectedRow());
        } else {
            JOptionPane.showMessageDialog(null, "Selecione uma Materia\n", "Gera Horario", JOptionPane.ERROR_MESSAGE);
        }

    }

    //metodo verifica qual opcao de configuracao esta marcada
    private void SincronizaProfessor(int idcurso) {        
        new LProfessorHorario(idcurso).HorarioProfessor(jYanohorario.getValue() + "/" + jTanohorario.getText(), new Date());
        
    }

    public void BuscaHorarioAula(String anoletivo, Date datahorario) {
        try {
            hapmb = new HorarioAulaProfMatDao().RetornaHorarioProfMat(anoletivo, datahorario);
            DefaultTableModel tabelahorario = (DefaultTableModel) jThorario.getModel();
            tabelahorario.setNumRows(0);
            for (int i = 0; i < hapmb.size(); i++) {
                tabelahorario.addRow(new Object[]{hapmb.get(i).getCurso(), hapmb.get(i).getPeriodo(), hapmb.get(i).getInicio(), hapmb.get(i).getTermino(),
                    (hapmb.get(i).getProfessorsegunda() + " : " + hapmb.get(i).getMateriasegunda()).equals(" : ")?""
                            :hapmb.get(i).getProfessorsegunda() + " : " + hapmb.get(i).getMateriasegunda(),
                    (hapmb.get(i).getProfessorterca() + " : " + hapmb.get(i).getMateriaterca()).equals(" : ")?""
                            :hapmb.get(i).getProfessorterca() + " : " + hapmb.get(i).getMateriaterca(),
                    (hapmb.get(i).getProfessorquarta() + " : " + hapmb.get(i).getMateriaquarta()).equals(" : ")?""
                            :hapmb.get(i).getProfessorquarta() + " : " + hapmb.get(i).getMateriaquarta(),
                    (hapmb.get(i).getProfessorquinta() + " : " + hapmb.get(i).getMateriaquinta()).equals(" : ")?""
                            :hapmb.get(i).getProfessorquinta() + " : " + hapmb.get(i).getMateriaquinta(),
                    (hapmb.get(i).getProfessorsexta() + " : " + hapmb.get(i).getMateriasexta()).equals(" : ")?""
                            :hapmb.get(i).getProfessorsexta() + " : " + hapmb.get(i).getMateriasexta(),
                    (hapmb.get(i).getProfessorsabado() + " : " + hapmb.get(i).getMateriasabado()).equals(" : ")?""
                            :hapmb.get(i).getProfessorsabado() + " : " + hapmb.get(i).getMateriasabado(),
                    (hapmb.get(i).getProfessordomingo() + " : " + hapmb.get(i).getMateriadomingo()).equals(" : ")?""
                            :hapmb.get(i).getProfessordomingo() + " : " + hapmb.get(i).getMateriadomingo(),
                    hapmb.get(i).getAnoletivo(), new SimpleDateFormat("dd.MM.yyyy").format(hapmb.get(i).getDatageracao())});
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao Buscar Horario\n" + ex, "Gera Horario", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void jdPesquisaHorario(String valor, String campo) {
        DefaultTableModel jdtabelahorario = (DefaultTableModel) jdtbhorario.getModel();
        jdtabelahorario.setNumRows(0);
        try {
            List<HorarioAulaPesquisaBeans> hpb = new HorarioAulaDao().BuscaHorario(valor, campo);
            for (int i = 0; i < hpb.size(); i++) {
                jdtabelahorario.addRow(new Object[]{hpb.get(i).getCurso(), hpb.get(i).getAnoletivo(), new SimpleDateFormat("dd.MM.yyyy").format(hpb.get(i).getDatageracao()), hpb.get(i).getUnidade(), hpb.get(i).getDatageracao()});
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao Buscar Horario\n" + ex, "Gera Horario", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void imprimeHorario(){        
        ThreadRelatorioHorario threadrelatorio=new ThreadRelatorioHorario(jThorario.getValueAt(1, 11).toString(), jThorario.getValueAt(1, 12).toString(), new UnidadeLogadoBeans().getId(),this);
        new Thread(threadrelatorio).start();

    }

    private void aguarde(final String texto) {
        new Thread(new Runnable() {

                    @Override
                    public void run() {
                        Aguarde.setLocationRelativeTo(null);
                        jXBusyLabel1.setText(texto);
                        Aguarde.setVisible(true);
                    }
                }).start();
    }
    //verifica se horario tem erro e se tiver exclui
    public Boolean verificaHorario(String anoletivo,int idcurso,Date datageracao){
        //return true;
        Boolean resp=false;
        if(new LProfessorHorario(idcurso).verificaErroHorario(anoletivo,datageracao) ){
            try {                
                new HorarioAulaDao().DeletaHorarioCurso(anoletivo,new SimpleDateFormat("dd.MM.yyyy").format(datageracao), idcurso);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao Excluir Horario com erro\n" + ex, "Gera Horario", JOptionPane.ERROR_MESSAGE);
            }
            resp=true;
        }        
        return resp;
    }

    private void buscaAnoletivo() {
        try {
            jTanohorario.setText(String.valueOf(new HorarioAulaDao().retornaAnoletivo(jYanohorario.getValue())+1));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao Buscar Sequencia Horario\n" + ex, "Gera Horario", JOptionPane.ERROR_MESSAGE);
        }
    }
    
}
